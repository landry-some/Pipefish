// This file provides the type signatures for the builtin functions.

def

// Symbols are in alphabetical order of their hooks.

(x float64) + (y float64) : builtin "add_floats"
(x int) + (y int) : builtin "add_integers"
(x list) + (y list) : builtin "add_lists"
(x set) + (y set) : builtin "add_sets"
(x string) + (y string) : builtin "add_strings"
(x float64) / (y float64) : builtin "divide_floats"
(x int) / (y int) : builtin "divide_integers"
(x float64) > (y float64) : builtin "gt_floats"
(x float64) >= (y float64) : builtin "gte_floats"
(x int) > (y int) : builtin "gt_ints"
(x int) >= (y int) : builtin "gte_ints"
(x float64) < (y float64) : builtin "lt_floats"
(x float64) <= (y float64) : builtin "lte_floats"
(x int) < (y int) : builtin "lt_ints"
(x int) <= (y int) : builtin "lte_ints"
(x single?) :: (y single?) : builtin "make_pair"
(x int) % (y int) : builtin "modulo_integers"
(x float64) * (y float64) : builtin "multiply_floats"
(x int) * (y int) : builtin "multiply_integers"
- (x float64) : builtin "negate_float"
- (x int) : builtin "negate_integer"
(x float64) - (y float64) : builtin "subtract_floats"
(x int) - (y int) : builtin "subtract_integers"

// Ordinary functions are in order of their function name.

error(x string) : builtin "make_error"
float(x int) : builtin "float_of_int"
float(x string) : builtin "float_of_string"
int(x string) : builtin "int_of_string"
int(x float64) : builtin "int_of_float"
len(x string) : builtin "len_string"
string(x single?) : builtin "string"
type(x single?) : builtin "type"
type(x tuple) : builtin "type_of_tuple"


Colors = enum RED, GREEN, BLUE









